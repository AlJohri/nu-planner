// Old Code

// Method 1 (fetchConnection using Event.class):

Connection<Event> events = facebookClient.fetchConnection( 
	"search", Event.class, 
	Parameter.with("q", "*"), 
	Parameter.with("center", "42.052925,-87.665834"), 
	Parameter.with("type", "event"),
	Parameter.with("distance", 1000)
);

do {

	Iterator itr = events.getData().iterator();
	while(itr.hasNext()) {
		Object element = itr.next();
		Event event = (Event) element;
		System.out.print(event.getName() + ": " + event.getStartTime() + " - " + event.getEndTime() + "\n");
	}

	events = facebookClient.fetchConnectionPage(events.getNextPageUrl(), Event.class);

} while (events.hasNext());


// Method 2 (fetchObject using JsonObject.class):

JsonObject result = facebookClient.fetchObject( "search", JsonObject.class, Parameter.with("q", "*"), Parameter.with("center", "42.052925,-87.665834"), Parameter.with("type", "event"), Parameter.with("distance", 1000) );
JsonArray events = result.getJsonArray("data");
result = facebookClient.fetchConnectionPage(result.getNextPageUrl(), JsonObject.class);


/*

DynamicForm requestData = form().bindFromRequest();

String name = requestData.get("name");
String desg = requestData.get("desg");
// etc

return ok("You sent: " + name + ", " + desg);

 */

System.out.println(request().getQueryString("start"));
System.out.println(Form.form().bindFromRequest().get("start"));




SELECT eid, name, description, pic_big, start_time, end_time, location 
FROM event
WHERE 
creator = 44837067390 OR 
creator = 10288601762 OR
creator = 104279497365 OR
ORDER BY start_time



35420112130/events?start=0&until=now

SELECT eid, name, start_time, end_time, location, venue, description 
    FROM event WHERE eid IN ( SELECT eid FROM event_member WHERE uid = 35420112130 )
    ORDER BY end_time asc


SELECT eid, name, description, pic_big, start_time, end_time, location, venue FROM event WHERE creator = 35420112130

https://www.facebook.com/norriscenter/events
https://graph.facebook.com/norriscenter

127834807348606

http://stackoverflow.com/questions/10812988/fql-search-events-from-their-venue-field


App Access Token
SELECT eid, name, creator, start_time, end_time, description, location, venue FROM event WHERE eid IN 
     (SELECT eid FROM event_member WHERE uid IN
          (SELECT page_id FROM place WHERE distance(latitude, longitude, '42.054774', '-87.67654') < 5000 LIMIT 51000) 
     LIMIT 51000)
ORDER BY start_time ASC LIMIT 51000


User Access Token Required
SELECT start_time, end_time, name, eid, pic,venue.id, location, creator, description FROM event WHERE eid IN  
	(SELECT eid FROM event_member WHERE uid IN 
		(SELECT uid2 FROM friend WHERE uid1=me() LIMIT 51000) 
	OR uid = me()) 
ORDER BY start_time ASC LIMIT 51000



SELECT eid, creator, name, pic, timezone, start_time, end_time, location, description FROM event WHERE (eid IN 
	(SELECT eid FROM event_member WHERE uid=me()))
ORDER BY start_time asc;





SELECT eid, name, pic_small, description, start_time,
 end_time, location FROM event WHERE creator = 705194041 AND eid IN (SELECT eid
 FROM event_member WHERE uid = 705194041);




THE KEY TO THE PROBLEM IS TO USE GRAPH API AND FQL QUERY.
FQL QUERY RESTRICT ME TO SEARCH FOR EVENTS WITH PAGES BUT GRAPH API ALLOWS ME TO SEARCH WITHIN A RADIUS WITHOUT A QUERY




search?q=*&center="42.052925,-87.665834"&type=event&distance=1000&fields=name,start_time,end_time,location,id,venue
search?q=""&center="42.052925,-87.665834"&type=event&limit=1000&fields=name,start_time,end_time,location,id,venue&distance=2000






/** The ScrapeFacebook class scrapes Facebook for events using various different methods including
  * fql, graph api, finding events created by specific organizations, and lastly querying based on location.
*/

// https://graph.facebook.com/search?q=b&type=event&fields=id,name,owner,description,start_time,end_time,location,venue,privacy,updated_time,picture,ticket_uri&access_token=524073037656113|l1aTC3FhsPHJEeRZfWB9vk70nAk
// https://graph.facebook.com/search?q=b&type=event&limit=5000&fields=id,name,owner,description,start_time,end_time,location,venue,privacy,updated_time,picture,ticket_uri&access_token=524073037656113|l1aTC3FhsPHJEeRZfWB9vk70nAk

// create event class objects

// Parameter.with("limit", 5000)
// result = facebookClient.fetchConnectionPage(result.getNextPageUrl(), JsonObject.class);

// Long eid = Long.valueOf(event.get("id").toString());
// System.out.println(eid);

// create event class objects


// TODO: change something to use a LinkedList
// http://www.daniweb.com/software-development/java/thrads/379327/how-to-use-linkedlist

// https://developers.facebook.com/docs/facebook-login/access-tokens/#generating
// https://graph.facebook.com/oauth/access_token?client_id=524073037656113&client_secret=7e9db2e6869c8ae6e7bc60d09686d54a&grant_type=client_credentials

// https://graph.facebook.com/search?q="lutkin hall"&type=event&fields=name,start_time,end_time,location,id,venue&locale=en_US&access_token=524073037656113|l1aTC3FhsPHJEeRZfWB9vk70nAk
// https://graph.facebook.com/search?q=*&type=event&center="42.052925,-87.665834"&distance=10&fields=name,start_time,end_time,location,id,venue&locale=en_US&access_token=524073037656113|l1aTC3FhsPHJEeRZfWB9vk70nAk


/**
  * Many events hosted by an organization are AT the organization, thus the Venue ID of the event
  * is the same as the Organization ID that created the event.
*/

// https://developers.facebook.com/docs/reference/api/event/

// http://www.avaje.org/ebean/introquery.html
// http://restfb.com/javadoc/
// http://joda-time.sourceforge.net/apidocs/
// http://joda-time.sourceforge.net/api-release/index.html

// JsonObject, JsonArray, JsonTokener
// http://jsoup.org/apidocs/



// DateTimeFormatter formatter;

// DateTime start_dt;
// if (jsonObject.getString("start_time").length()>19) formatter= DateTimeFormat.forPattern("yyyy-MM-dd'T'HH:mm:ssZ");
// else if (jsonObject.getString("start_time").length()>10) formatter= DateTimeFormat.forPattern("yyyy-MM-dd'T'HH:mm:ss");
// else formatter= DateTimeFormat.forPattern("yyyy-MM-dd");
// if (jsonObject.getString("start_time").length()!=4) start_dt=formatter.parseDateTime(jsonObject.getString("start_time"));
// else start_dt=null;

// DateTime end_dt;
// if (jsonObject.getString("end_time").length()>19)  formatter= DateTimeFormat.forPattern("yyyy-MM-dd'T'HH:mm:ssZ");
// else if (jsonObject.getString("end_time").length()>10) formatter= DateTimeFormat.forPattern("yyyy-MM-dd'T'HH:mm:ss");
// else formatter= DateTimeFormat.forPattern("yyyy-MM-dd");
// if (jsonObject.getString("end_time").length()!=4) end_dt=formatter.parseDateTime(jsonObject.getString("end_time"));
// else end_dt=null;



// DateTime starttime = new DateTime();
// starttime = starttime.parse(start);
// return starttime;



// DateTime endtime = new DateTime();
// if (end!=null && !end.isEmpty()) endtime = endtime.parse(event.end_time);
// else endtime=null;
// return endtime;



package controllers;

import com.restfb.types.*;

import com.restfb.Facebook;

public class FqlEvent {
	@Facebook Long eid;
	@Facebook String name;
	@Facebook String creator;
	@Facebook String start_time;
	@Facebook String end_time;
	@Facebook String location;
	@Facebook String venue;
	@Facebook String description;
	@Facebook String pic;

	@Override public String toString() {
		return String.format("%s (%d)", name, eid);
	}
}
